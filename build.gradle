plugins {
    id 'java-library'
    id 'maven-publish'
    id 'jacoco'
    // https://plugins.gradle.org/plugin/io.freefair.lombok
    id 'io.freefair.lombok' version '6.5.0.3'
    // shadowJar plugin is required to create an uberJar with all runtime dependencies
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'java'
    id 'checkstyle'
}

group = 'mil.dso.keycloak-p1-auth-plugin'
version = '2.2.0'
sourceCompatibility = '11'

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}


repositories {
    mavenCentral()
}

// create lintGradle task for pipeline
tasks.register('lintGradle') {
    dependsOn checkstyleMain, checkstyleTest
}

// ignore all lint errors for test code
checkstyleTest.exclude('**/**')

dependencies {
    testImplementation 'org.powermock:powermock-module-junit4:2.0.9'
    testImplementation 'org.powermock:powermock-api-mockito2:2.0.9'
    testImplementation 'org.keycloak:keycloak-services:19.0.1'
    testImplementation 'org.keycloak:keycloak-server-spi:19.0.1'
    testImplementation 'org.keycloak:keycloak-server-spi-private:19.0.1'

    compileOnly 'org.keycloak:keycloak-services:19.0.1'
    compileOnly 'org.keycloak:keycloak-server-spi:19.0.1'
    compileOnly 'org.keycloak:keycloak-server-spi-private:19.0.1'

    implementation 'org.jboss.logmanager:log4j2-jboss-logmanager:1.1.1.Final'
}

jar {
    // disable the default jar task so that shadowJar is used instead
    enabled = false
    dependsOn(shadowJar)
}

// shadowJar inherits from the jar task
// https://imperceptiblethoughts.com/shadow/configuration/
shadowJar {
    // don't append anything to the end of the jar file name
    classifier = null
}

test {
    // avoid error during unit tests for jboss logmanager
    systemProperty "java.util.logging.manager", "org.jboss.logmanager.LogManager"
}

jacoco {
    toolVersion = "0.8.8"
    reportsDirectory = file("${buildDir}/jacoco")
}

jacocoTestReport {
    reports {
        html.enabled true
        html.destination file("${buildDir}/jacoco/html/")
        csv.enabled false
        xml.enabled true
        xml.destination file("${buildDir}/jacoco/test.xml")
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
